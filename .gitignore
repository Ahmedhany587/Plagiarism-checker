# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Virtual environment for this project
plag_venv/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.
#  For PyCharm Community Edition, use 'PyCharm CE' instead of 'PyCharm'.
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project-specific ignores
# ========================

# Cache directories
embedding_cache/
*.pkl
*.cache

# Extracted images (temporary processing files)
extracted_images/
temp_images/
*/extracted_images/

# Log files and directories
logs/
*.log
app.log
errors.log

# Streamlit specific
.streamlit/

# Machine learning model files
models/
*.model
*.bin
*.h5
*.ckpt
*.pth
*.pt

# Large data files
data/
datasets/
*.csv
*.tsv
*.json
*.jsonl
*.parquet

# PDF files (depending on your needs - uncomment if you don't want to track PDFs)
# *.pdf

# Image files (uncomment if you don't want to track processed images)
# *.png
# *.jpg
# *.jpeg
# *.gif
# *.bmp
# *.tiff

# FiftyOne datasets and cache
.fiftyone/
fiftyone.db

# Hugging Face cache
.cache/
transformers_cache/

# CLIP model cache
clip_cache/

# Sentence Transformers model cache
model_cache/

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Configuration files with sensitive information
config.ini
secrets.json
.secrets

# Database files
*.db
*.sqlite
*.sqlite3

# Backup files
*.bak
*.backup
*~

# Runtime files
*.pid

# Memory dumps
*.dmp

# Profiling data
*.prof

# Coverage reports
.coverage
htmlcov/

# Documentation builds
docs/_build/
docs/build/

# Local environment variables
.env.local
.env.development.local
.env.test.local
.env.production.local

# Node.js (if you have any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Conda environments
.conda/ 